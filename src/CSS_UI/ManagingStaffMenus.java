/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CSS_UI;
import CSS_BLL.UserAcc;
import CSS_BLL.Courier;
import CSS_BLL.Feedback;
import CSS_DAO.UserAccount;
import CSS_DAO.UserAccountDAO;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import CSS_BLL.Items;
/**
 *
 * @author Sujan
 */
public class ManagingStaffMenus extends javax.swing.JFrame {
     boolean isFound = false;
    /**
     * Creates new form ManagingStaffMenus
     */
    public ManagingStaffMenus() {
        initComponents();
        loadOrderItemData();
        loadData();
        loadOrderData();
        
    }
    
    
    private void loadOrderItemData(){
    try {
        ArrayList<String> fileData;
        UserAccountDAO cd = new UserAccount();
        fileData = cd.getAllOrderItem();
        DefaultTableModel dtm = new DefaultTableModel(new String[]{"Item ID", "Item Name", "Price"}, 0);
        Object[] tableLines = fileData.toArray();
        for(int i=0;i<tableLines.length;i++){
            String lines=tableLines[i].toString();
            String[] row=lines.split(",");
            dtm.addRow(row);
            
        }
        AddOrderTable.setModel(dtm);
    } catch (IOException ex) {
        Logger.getLogger(ManagingStaffMenus.class.getName()).log(Level.SEVERE, null, ex);
    }
    
}




    private void loadData(){
    try {
        ArrayList<String> fileData;
        UserAccountDAO cd = new UserAccount();
        fileData = cd.getAllUsers();
        DefaultTableModel dtm = new DefaultTableModel(new String[]{"UserID", "User Name", "Password", "Role", "Email"}, 0);
        Object[] tableLines = fileData.toArray();
        for(int i=0;i<tableLines.length;i++){
            String lines=tableLines[i].toString();
            String[] row=lines.split(",");
            row[2]="******";
            dtm.addRow(row);
            
        }
        jTable2.setModel(dtm);
    } catch (IOException ex) {
        Logger.getLogger(ManagingStaffMenus.class.getName()).log(Level.SEVERE, null, ex);
    }
    
}
    

    
    private void loadOrderData(){
    try {
        ArrayList<String> fileData;
        UserAccountDAO cd = new UserAccount();
        fileData = cd.getAllOrders();
        DefaultTableModel dtm = new DefaultTableModel(new String[]{"ID", "Name", "Address", "Contact", "Status", "Order Details", "Order Date", "FeedBack", "Amount", "Deliver Date", "Deliver By"}, 0);
        Object[] tableLines = fileData.toArray();
        for(int i=0;i<tableLines.length;i++){
            String lines=tableLines[i].toString();
            String[] row=lines.split(",");
            dtm.addRow(row);
            
        }
        jTable2.setModel(dtm);
    } catch (IOException ex) {
        Logger.getLogger(ManagingStaffMenus.class.getName()).log(Level.SEVERE, null, ex);
    }
    
}
    
    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        choice1 = new java.awt.Choice();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        CID = new javax.swing.JTextField();
        Cname = new javax.swing.JTextField();
        Address = new javax.swing.JTextField();
        Contact = new javax.swing.JTextField();
        CCharge = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        ItemName = new javax.swing.JTextField();
        Date = new javax.swing.JTextField();
        CSearch = new javax.swing.JButton();
        UpdateOrder = new javax.swing.JButton();
        ResetOrder = new javax.swing.JButton();
        Status = new javax.swing.JComboBox<>();
        DeleteOrder = new javax.swing.JButton();
        SaveOrder = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        AddOrderTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        ProductID = new javax.swing.JTextField();
        PSearch = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        ProductName = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        Price = new javax.swing.JTextField();
        SaveProduct = new javax.swing.JButton();
        UpdateProduct = new javax.swing.JButton();
        DeleteProduct = new javax.swing.JButton();
        ResetProduct = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        rfeedback = new javax.swing.JTextField();
        RcustomerID = new javax.swing.JTextField();
        Ritemname = new javax.swing.JTextField();
        Rdate = new javax.swing.JTextField();
        Rname = new javax.swing.JTextField();
        Raddress = new javax.swing.JTextField();
        Rcontact = new javax.swing.JTextField();
        Rdeliveredby = new javax.swing.JTextField();
        Rstatus = new javax.swing.JTextField();
        Rcharge = new javax.swing.JTextField();
        Rdod = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        Rid = new javax.swing.JTextField();
        Generate = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        Fsearch = new javax.swing.JButton();
        Fcustomerid = new javax.swing.JTextField();
        Ffeedback = new javax.swing.JTextField();
        Fcustomername = new javax.swing.JTextField();
        Improvement = new javax.swing.JTextField();
        report = new javax.swing.JComboBox<>();
        Fsave = new javax.swing.JButton();
        Fupdate = new javax.swing.JButton();
        Fdelete = new javax.swing.JButton();
        Freset = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        Uid = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        Uname = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        Upassword = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        Uupdate = new javax.swing.JButton();
        Ureset = new javax.swing.JButton();
        Udelete = new javax.swing.JButton();
        Usearch = new javax.swing.JButton();
        Uemail = new javax.swing.JTextField();
        Urole = new javax.swing.JComboBox<>();
        Usave = new javax.swing.JButton();
        Ulogout = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MS Menu");

        jPanel1.setBackground(new java.awt.Color(255, 51, 51));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 153));

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 51, 51), new java.awt.Color(255, 51, 51)));

        jLabel8.setText("Customer ID ");

        jLabel5.setText("Customer Name");

        jLabel9.setText("Address");

        jLabel10.setText("Contact");

        jLabel11.setText("Delivery Status");

        jLabel3.setText("Courier Charge");

        jLabel4.setText("Customer Details");

        CID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CIDActionPerformed(evt);
            }
        });

        Cname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CnameActionPerformed(evt);
            }
        });

        jLabel7.setText("Item Name");

        jLabel17.setText("Order Date (Y-M-D)");

        Date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateActionPerformed(evt);
            }
        });

        CSearch.setBackground(new java.awt.Color(255, 51, 51));
        CSearch.setText("Search");
        CSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CSearchActionPerformed(evt);
            }
        });

        UpdateOrder.setBackground(new java.awt.Color(255, 51, 51));
        UpdateOrder.setText("Update Orders");
        UpdateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateOrderActionPerformed(evt);
            }
        });

        ResetOrder.setBackground(new java.awt.Color(255, 51, 51));
        ResetOrder.setText("Reset");
        ResetOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetOrderActionPerformed(evt);
            }
        });

        Status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Delivered" }));

        DeleteOrder.setBackground(new java.awt.Color(255, 51, 51));
        DeleteOrder.setText("Delete Orders");
        DeleteOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteOrderActionPerformed(evt);
            }
        });

        SaveOrder.setBackground(new java.awt.Color(255, 51, 51));
        SaveOrder.setText("Save Orders");
        SaveOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(Status, javax.swing.GroupLayout.Alignment.LEADING, 0, 184, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(CID, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Cname, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Address, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Contact, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jLabel7)
                    .addComponent(ItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UpdateOrder)
                            .addComponent(CSearch)
                            .addComponent(ResetOrder)
                            .addComponent(DeleteOrder)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SaveOrder))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))))
                .addGap(0, 41, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(22, 22, 22)
                .addComponent(jLabel8)
                .addGap(2, 2, 2)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CSearch)
                    .addComponent(SaveOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(3, 3, 3)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ResetOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Courier Order Management", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));

        AddOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(AddOrderTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Product ID");

        ProductID.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ProductID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductIDActionPerformed(evt);
            }
        });

        PSearch.setBackground(new java.awt.Color(255, 51, 51));
        PSearch.setText("Search By ID");
        PSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PSearchActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Product Name");

        ProductName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Price");

        Price.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        SaveProduct.setBackground(new java.awt.Color(255, 51, 51));
        SaveProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SaveProduct.setText("Save");
        SaveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveProductActionPerformed(evt);
            }
        });

        UpdateProduct.setBackground(new java.awt.Color(255, 51, 51));
        UpdateProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        UpdateProduct.setText("Update");
        UpdateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateProductActionPerformed(evt);
            }
        });

        DeleteProduct.setBackground(new java.awt.Color(255, 51, 51));
        DeleteProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        DeleteProduct.setText("Delete");
        DeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteProductActionPerformed(evt);
            }
        });

        ResetProduct.setBackground(new java.awt.Color(255, 51, 51));
        ResetProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ResetProduct.setText("Reset");
        ResetProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProductID, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(SaveProduct)
                        .addGap(53, 53, 53)
                        .addComponent(UpdateProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(DeleteProduct)
                        .addGap(41, 41, 41)
                        .addComponent(ResetProduct))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(ProductName)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Price, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ProductID, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(PSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(80, 80, 80)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SaveProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(UpdateProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DeleteProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ResetProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(114, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Product Management", jPanel7);

        jPanel5.setBackground(new java.awt.Color(204, 255, 255));

        jPanel6.setBackground(new java.awt.Color(204, 255, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setText("Customer Report");

        jLabel14.setText("Customer ID :");

        jLabel15.setText("Customer Name :");

        jLabel16.setText("Address :");

        jLabel18.setText("Item Name :");

        jLabel19.setText("Order Date :");

        jLabel21.setText("Contact :");

        jLabel22.setText("Status :");

        jLabel23.setText("Courier Charge :");

        jLabel24.setText("Delivery By :");

        jLabel25.setText("Delivery Date:");

        jLabel26.setText("Feedback :");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(jLabel13))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(319, 319, 319)
                        .addComponent(jLabel26))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(rfeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel24)
                        .addComponent(jLabel21)
                        .addComponent(jLabel16)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Rdeliveredby)
                    .addComponent(RcustomerID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                    .addComponent(Rname, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Raddress, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Rcontact, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel23)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Rcharge, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jLabel22)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel20)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Ritemname)
                                .addComponent(Rdate)
                                .addComponent(Rstatus, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(18, 18, 18)
                        .addComponent(Rdod, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(103, 103, 103))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(43, 43, 43)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel18)
                    .addComponent(RcustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ritemname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel19)
                    .addComponent(Rdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Rname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel20)
                    .addComponent(jLabel22)
                    .addComponent(Raddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Rstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel23)
                    .addComponent(Rcontact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Rcharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(Rdeliveredby, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Rdod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rfeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );

        jLabel27.setText("Enter Courier ID");

        Generate.setBackground(new java.awt.Color(255, 51, 51));
        Generate.setText("Generate Report");
        Generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(Generate))
                            .addComponent(Rid, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel27)))
                .addGap(19, 19, 19))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Rid, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Generate))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Report Generation", jPanel8);

        jPanel11.setBackground(new java.awt.Color(204, 255, 255));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 51, 51), new java.awt.Color(255, 51, 51)));

        jLabel28.setText("Customer ID");

        jLabel29.setText("Feedback");

        jLabel30.setText("Feedback Report");

        jLabel31.setText("Customer Name");

        jLabel32.setText("Imrpovement Required");

        Fsearch.setBackground(new java.awt.Color(255, 51, 51));
        Fsearch.setText("Search By ID");
        Fsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FsearchActionPerformed(evt);
            }
        });

        report.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Excellent", "Good", "Average", "Poor", "Very Poor" }));

        Fsave.setBackground(new java.awt.Color(255, 51, 51));
        Fsave.setText("Save");
        Fsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FsaveActionPerformed(evt);
            }
        });

        Fupdate.setBackground(new java.awt.Color(255, 51, 51));
        Fupdate.setText("Update");
        Fupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FupdateActionPerformed(evt);
            }
        });

        Fdelete.setBackground(new java.awt.Color(255, 51, 51));
        Fdelete.setText("Delete");
        Fdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FdeleteActionPerformed(evt);
            }
        });

        Freset.setBackground(new java.awt.Color(255, 51, 51));
        Freset.setText("Reset");
        Freset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FresetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(Fsave)
                        .addGap(39, 39, 39)
                        .addComponent(Fupdate))
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(report, 0, 215, Short.MAX_VALUE)
                            .addComponent(jLabel30)
                            .addComponent(jLabel29)
                            .addComponent(jLabel28)
                            .addComponent(Ffeedback))
                        .addGroup(jPanel12Layout.createSequentialGroup()
                            .addComponent(Fcustomerid, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(Fsearch))))
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel32)
                            .addComponent(jLabel31)
                            .addComponent(Improvement, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                            .addComponent(Fcustomername))
                        .addGap(61, 61, 61))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(Fdelete)
                        .addGap(38, 38, 38)
                        .addComponent(Freset)
                        .addContainerGap(103, Short.MAX_VALUE))))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jLabel31))
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Fcustomerid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Fsearch)))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Fcustomername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ffeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Improvement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(report, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Fsave)
                    .addComponent(Fupdate)
                    .addComponent(Fdelete)
                    .addComponent(Freset))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Feedback Management", jPanel9);

        jPanel14.setBackground(new java.awt.Color(204, 255, 255));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 51, 51), new java.awt.Color(255, 51, 51)));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel33.setText("Role");

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel34.setText("User ID");

        Uid.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel35.setText("Username");

        Uname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnameActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel36.setText("Password");

        Upassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Upassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpasswordActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel37.setText("Search Your  ID with Email");

        Uupdate.setBackground(new java.awt.Color(255, 51, 51));
        Uupdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Uupdate.setText("Update Your Details");
        Uupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UupdateActionPerformed(evt);
            }
        });

        Ureset.setBackground(new java.awt.Color(255, 51, 51));
        Ureset.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Ureset.setText("Reset");
        Ureset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UresetActionPerformed(evt);
            }
        });

        Udelete.setBackground(new java.awt.Color(255, 51, 51));
        Udelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Udelete.setText("Delete");
        Udelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UdeleteActionPerformed(evt);
            }
        });

        Usearch.setBackground(new java.awt.Color(255, 51, 51));
        Usearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Usearch.setText("Search");
        Usearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsearchActionPerformed(evt);
            }
        });

        Uemail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        Urole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Delivery Staff", "Managing Staff" }));

        Usave.setBackground(new java.awt.Color(255, 51, 51));
        Usave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Usave.setText("Save");
        Usave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsaveActionPerformed(evt);
            }
        });

        Ulogout.setBackground(new java.awt.Color(255, 51, 51));
        Ulogout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Ulogout.setText("Log Out");
        Ulogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UlogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Uid, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(Urole, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Uemail, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel37)
                                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(Udelete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                        .addComponent(Ureset, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addComponent(Usearch, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(Usave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(30, 30, 30)
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Uupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Ulogout)))))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Upassword, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34)
                            .addComponent(Uname, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel36)
                            .addComponent(jLabel35))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(132, 132, 132))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Uemail)
                    .addComponent(Usearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Urole))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Uid, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Uupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Usave, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Ulogout, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(Ureset, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(Uname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Upassword, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Udelete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(146, 146, 146))
        );

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel38.setText("Staff Management");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(173, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel38)
                .addGap(31, 31, 31)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(395, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Profile Management", jPanel10);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setText("Courier Service System");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(267, 267, 267))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addGap(26, 26, 26)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateOrderActionPerformed
        // TODO add your handling code here:
        String search_id = CID.getText();
        String uCname = Cname.getText();
        String uAddress = Address.getText();
        String uContact = Contact.getText();
        //String ucustomerstatus = customerstatus.getSelectedItem().toString();
        String uItemName = ItemName.getText();
        String uDate = Date.getText();
        String uCCharge = CCharge.getText();

        ArrayList<Courier> userList = new ArrayList<>();

        if (!isFound) {
            JOptionPane.showMessageDialog(this, "Enter a valid id and search");
        } else if (search_id.isEmpty() || uCname.isEmpty() || uAddress.isEmpty() || uContact.isEmpty() || uItemName.isEmpty() || uDate.isEmpty() || uCCharge.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are Necessary!");
        } else {
            File file = new File("OrderData.txt");

            try {
                try (FileReader fr = new FileReader(file)) {
                    BufferedReader br = new BufferedReader(fr);
                    String data;
                    Courier tempUser;

                    while ((data = br.readLine()) != null) {
                        tempUser = new Courier(data);
                        if (tempUser.getUniqueID().equals(search_id)) {
                            tempUser.setCOname(uCname);
                            tempUser.setAddress(uAddress);
                            tempUser.setContact(uContact);
                            //tempUser.setCustomerStatus(ucustomerstatus);
                            tempUser.setItemName(uItemName);
                            tempUser.setDate(uDate);
                            tempUser.setCCharge(uCCharge);
                        }
                        userList.add(tempUser);
                    }
                }

                try (PrintWriter pw = new PrintWriter(new FileWriter(file, false))) {
                    userList.forEach((user) -> {
                        pw.println(user.toString());
                    });
                    JOptionPane.showMessageDialog(null, "Order Data Updated Successfully!");
                    UpdateOrder.setEnabled(false);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
                loadOrderData();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
        
    }//GEN-LAST:event_UpdateOrderActionPerformed

    private void DateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DateActionPerformed

    private void CnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CnameActionPerformed

    private void CIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CIDActionPerformed

    private void DeleteOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteOrderActionPerformed
        // TODO add your handling code here:
        String delete_id = CID.getText();

        ArrayList<Courier> userList = new ArrayList<>();

        if (!isFound) {
            JOptionPane.showMessageDialog(this, "Enter a valid Customer id and search");
        } else {
            File file = new File("OrderData.txt");

            try {
                try (FileReader fr = new FileReader(file)) {
                    BufferedReader br = new BufferedReader(fr);
                    String data;
                    Courier tempUser;

                    while ((data = br.readLine()) != null) {
                        tempUser = new Courier(data);
                        if (!tempUser.getUniqueID().equals(delete_id)) {
                            userList.add(tempUser);
                        }
                    }
                }

                try (PrintWriter pw = new PrintWriter(new FileWriter(file, false))) {
                    userList.forEach((user) -> {
                        pw.println(user.toString());
                    });
                    JOptionPane.showMessageDialog(this, "Are You Sure you want to delete?");
                    JOptionPane.showMessageDialog(this, "Deleted Successfully!");
                    DeleteOrder.setEnabled(false);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
                loadOrderData();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_DeleteOrderActionPerformed

    private void ProductIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductIDActionPerformed

    private void GenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateActionPerformed
        // TODO add your handling code here:
        Rname.setText("");
        Raddress.setText("");
        Rcontact.setText("");
        Rstatus.setText("");
        Ritemname.setText("");
        Rdate.setText("");
        rfeedback.setText("");
        Rcharge.setText("");
        Rdod.setText("");
        Rdeliveredby.setText("");

        isFound = false;

        String search_id = Rid.getText();

        if (search_id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter valid Customer id to Generate Report");
        } else {
            File file = new File("OrderData.txt");

            try {
                FileReader fr = new FileReader(file);
                BufferedReader br = new BufferedReader(fr);
                String data;
                Courier order;

                while ((data = br.readLine()) != null) {
                    order = new Courier(data);
                    if (order.getUniqueID().equals(search_id)) {
                        isFound = true;
                        Rid.setText(order.getRid());
                        RcustomerID.setText(order.getUniqueID());
                        Rname.setText(order.getCOname());
                        Raddress.setText(order.getAddress());
                        Rcontact.setText(order.getContact());
                        Rstatus.setText(order.getCustomerStatus());
                        Ritemname.setText(order.getItemName());
                        Rdate.setText(order.getDate());
                        rfeedback.setText(order.getCFeedback());
                        Rcharge.setText(order.getCCharge());
                        Rdod.setText(order.getDeliveredDate());
                        Rdeliveredby.setText(order.getDeliveredBy());
                        return;
                    }
                }
                JOptionPane.showMessageDialog(this, "Customer not found");
            } catch (FileNotFoundException ex) {

            } catch (IOException ex) {

            }
        }

        
    }//GEN-LAST:event_GenerateActionPerformed

    private void UpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UpasswordActionPerformed

    private void UsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsearchActionPerformed
        // TODO add your handling code here:
        Uid.setText("");
        Uname.setText("");
        Upassword.setText("");
        Urole.getSelectedItem().toString();
        isFound = false;
        Uupdate.setEnabled(true);
        Udelete.setEnabled(true);
        Ureset.setEnabled(true);
        Usave.setEnabled(false);
        Uid.setEnabled(false);

        String search_id = Uemail.getText();

        if (search_id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter an user id to search");
        } else {
            File file = new File("User.txt");

            try {
                FileReader fr = new FileReader(file);
                BufferedReader br = new BufferedReader(fr);
                String data;
                UserAcc user;

                while ((data = br.readLine()) != null) {
                    user = new UserAcc(data);
                    if (user.getUemail().equals(search_id)) {
                        isFound = true;
                        Uemail.setText(user.getUemail());
                        Uid.setText(user.getUid());
                        Uname.setText(user.getUname());
                        Upassword.setText(user.getUpassword());
                        Urole.setSelectedItem(user.getUrole());
                        return;
                    }
                }
                JOptionPane.showMessageDialog(this, "User not found");
            } catch (FileNotFoundException ex) {

            } catch (IOException ex) {

            }
        }
    }//GEN-LAST:event_UsearchActionPerformed

    private void SaveOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveOrderActionPerformed
        // TODO add your handling code here:
        String uCID = CID.getText();
        String uCname = Cname.getText();
        String uAddress = Address.getText();
        String uContact = Contact.getText();
        String uStatus = Status.getSelectedItem().toString();
        String uItemName = ItemName.getText();
        String uDate = Date.getText();
        String uCCHharge = CCharge.getText();

        if (uCID.isEmpty() || uCname.isEmpty() || uAddress.isEmpty() || uContact.isEmpty() || uStatus.isEmpty() || uItemName.isEmpty() || uDate.isEmpty() || uCCHharge.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields Necessary");
        } else {

            File search = new File("OrderData.txt");

            try {

                FileReader fr = new FileReader(search);
                BufferedReader br = new BufferedReader(fr);
                String data;
                Courier s;

                while ((data = br.readLine()) != null) {
                    s = new Courier(data);
                    if (s.getUniqueID().equals(uCID)) {
                        JOptionPane.showMessageDialog(null, "ID Already Exists. Try Another ID!");
                    } else {

                        Courier ua=new Courier();
                        UserAccountDAO ud=new UserAccount();

                        ua.setUniqueID(CID.getText());
                        ua.setCOname(Cname.getText());
                        ua.setAddress(Address.getText());
                        ua.setContact(Contact.getText());
                        ua.setCustomerStatus(Status.getSelectedItem().toString());
                        ua.setItemName(ItemName.getText());
                        ua.setDate(Date.getText());
                        ua.setCCharge(CCharge.getText());

                        try {
                            ud.SaveOrder(ua);
                        } catch (IOException ex) {
                            Logger.getLogger(ManagingStaffMenus.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        loadOrderData();
                        return;
                    }

                }
            } catch (IOException ex) {

                Logger.getLogger(ManagingStaffMenus.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_SaveOrderActionPerformed

    private void CSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CSearchActionPerformed
        // TODO add your handling code here:
        Cname.setText("");
        Address.setText("");
        Contact.setText("");
        Status.getSelectedItem().toString();
        ItemName.setText("");
        Date.setText("");
        CCharge.setText("");
        isFound = false;
        UpdateOrder.setEnabled(true);
        DeleteOrder.setEnabled(true);
        ResetOrder.setEnabled(true);
        SaveOrder.setEnabled(false);
        Status.setEnabled(false);
        CID.setEnabled(false);

        String search_id = CID.getText();

        if (search_id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter an customer id to search");
        } else {
            File file = new File("OrderData.txt");

            try {
                FileReader fr = new FileReader(file);
                BufferedReader br = new BufferedReader(fr);
                String data;
                Courier order;

                while ((data = br.readLine()) != null) {
                    order = new Courier(data);
                    if (order.getUniqueID().equals(search_id)) {
                        isFound = true;
                        CID.setText(order.getUniqueID());
                        Cname.setText(order.getCOname());
                        Address.setText(order.getAddress());
                        Contact.setText(order.getContact());
                        Status.setSelectedItem(order.getCustomerStatus());
                        ItemName.setText(order.getItemName());
                        Date.setText(order.getDate());
                        CCharge.setText(order.getCCharge());
                        return;
                    }
                }
                JOptionPane.showMessageDialog(this, "Customer not found");
            } catch (FileNotFoundException ex) {

            } catch (IOException ex) {

            }
        }

    }//GEN-LAST:event_CSearchActionPerformed

    private void ResetOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetOrderActionPerformed
        // TODO add your handling code here:
        CID.setText("");
        Cname.setText("");
        Address.setText("");
        Contact.setText("");
        Status.getSelectedItem().toString();
        ItemName.setText("");
        Date.setText("");
        CCharge.setText("");

        CID.setEnabled(true);
        Cname.setEnabled(true);
        Address.setEnabled(true);
        Contact.setEnabled(true);
        Status.setEnabled(true);
        ItemName.setEnabled(true);
        Date.setEnabled(true);
        CCharge.setEnabled(true);

        SaveOrder.setEnabled(true);
        UpdateOrder.setEnabled(true);
        DeleteOrder.setEnabled(true);
        CSearch.setEnabled(true);
    }//GEN-LAST:event_ResetOrderActionPerformed

    private void PSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PSearchActionPerformed
        // TODO add your handling code here:
        ProductName.setText("");
        Price.setText("");
        isFound = false;
        UpdateProduct.setEnabled(true);
        DeleteProduct.setEnabled(true);
        
        ResetProduct.setEnabled(true);
        SaveProduct.setEnabled(false);
        ProductName.setEnabled(true);
        ProductID.setEnabled(true);

        String search_id = ProductID.getText();

        if (search_id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter an Item id to search");
        } else {
            File file = new File("OrderItem.txt");

            try {
                FileReader fr = new FileReader(file);
                BufferedReader br = new BufferedReader(fr);
                String data;
                Items order;

                while ((data = br.readLine()) != null) {
                    order = new Items(data);
                    if (order.getProductID().equals(search_id)) {
                        isFound = true;
                        ProductID.setText(order.getProductID());
                        ProductName.setText(order.getProductName());
                        Price.setText(order.getPrice());
                        return;
                    }
                }
                JOptionPane.showMessageDialog(this, "Item not found");
            } catch (FileNotFoundException ex) {

            } catch (IOException ex) {

            }
        }

    }//GEN-LAST:event_PSearchActionPerformed

    private void DeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteProductActionPerformed
        // TODO add your handling code here:
        String delete_id = ProductID.getText();

ArrayList<Items> userList = new ArrayList<>();

if (!isFound) {
    JOptionPane.showMessageDialog(this, "Enter a valid Item id and search");
} else {
    File file = new File("OrderItem.txt");

    try {
        try (FileReader fr = new FileReader(file)) {
            BufferedReader br = new BufferedReader(fr);
            String data;
            Items tempUser;

            while ((data = br.readLine()) != null) {
                tempUser = new Items(data);
                if (!tempUser.getProductID().equals(delete_id)) {
                    userList.add(tempUser);
                }
            }
        }

        try (PrintWriter pw = new PrintWriter(new FileWriter(file, false))) {
            userList.forEach((user) -> {
                pw.println(user.toString());
            });
            JOptionPane.showMessageDialog(this, "Are You Sure you want to delete?");
            JOptionPane.showMessageDialog(this, "Deleted Successfully!");
            DeleteProduct.setEnabled(false);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        loadOrderItemData();
    } catch (FileNotFoundException ex) {
        JOptionPane.showMessageDialog(this, ex.getMessage());
    } catch (IOException ex) {
        JOptionPane.showMessageDialog(this, ex.getMessage());
    }
}
    }//GEN-LAST:event_DeleteProductActionPerformed

    private void SaveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveProductActionPerformed
        // TODO add your handling code here:
        String itemcode = ProductID.getText();
        String itemn = ProductName.getText();
        String itemPrice = Price.getText();
        
        if (itemcode.isEmpty() || itemn.isEmpty() || itemPrice.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields Necessary");
        } else {

            File search = new File("OrderItem.txt");

            try {

                FileReader fr = new FileReader(search);
                BufferedReader br = new BufferedReader(fr);
                String data;
                Items oi;

                        Items oia=new Items();
                        UserAccountDAO ud=new UserAccount();

                        oia.setProductID(ProductID.getText());
                        oia.setProductName(ProductName.getText());
                        oia.setPrice(Price.getText());
                        
                        try {
                            ud.SaveOrderItem(oia);
                        } catch (IOException ex) {
                            Logger.getLogger(DeliveryStaffHome.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        loadOrderItemData();
                    
            } catch (IOException ex) {

                Logger.getLogger(ManagingStaffMenus.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_SaveProductActionPerformed

    private void UpdateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateProductActionPerformed
        // TODO add your handling code here:
        String search_id = ProductID.getText();
        String itemn = ProductName.getText();
        String itemPrice = Price.getText();

        ArrayList<Items> userList = new ArrayList<>();

        if (!isFound) {
            JOptionPane.showMessageDialog(this, "Enter a valid Item id and search");
        } else if (search_id.isEmpty() || itemn.isEmpty() || itemPrice.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are Necessary!");
        } else {
            File file = new File("OrderItem.txt");

            try {
                try (FileReader fr = new FileReader(file)) {
                    BufferedReader br = new BufferedReader(fr);
                    String data;
                    Items tempUser;

                    while ((data = br.readLine()) != null) {
                        tempUser = new Items(data);
                        if (tempUser.getProductID().equals(search_id)) {
                            tempUser.setProductName(itemn);
                            tempUser.setPrice(itemPrice);
                        }
                        userList.add(tempUser);
                    }
                }

                try (PrintWriter pw = new PrintWriter(new FileWriter(file, false))) {
                    userList.forEach((user) -> {
                        pw.println(user.toString());
                    });
                    JOptionPane.showMessageDialog(null, "Item Data Updated Successfully!");
                    UpdateProduct.setEnabled(false);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
                loadOrderItemData();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_UpdateProductActionPerformed

    private void ResetProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetProductActionPerformed
        // TODO add your handling code here:
        ProductID.setText("");
        ProductName.setText("");
        Price.setText("");
        
        ProductID.setEnabled(true);
        ProductName.setEnabled(true);
        Price.setEnabled(true);
        
        PSearch.setEnabled(true);
        SaveProduct.setEnabled(true);
        DeleteProduct.setEnabled(true);
        UpdateProduct.setEnabled(true);
    }//GEN-LAST:event_ResetProductActionPerformed

    private void FsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FsearchActionPerformed
        // TODO add your handling code here:
        Fcustomername.setText("");
        Ffeedback.setText("");
        Improvement.setText("");
        report.getSelectedItem().toString();
        isFound = false;
        Fupdate.setEnabled(true);
        Fdelete.setEnabled(true);
        Freset.setEnabled(true);
        Fsave.setEnabled(true);
        Fcustomerid.setEnabled(false);
        Fcustomername.setEnabled(false);
        Ffeedback.setEnabled(false);

        String search_id = Fcustomerid.getText();

        if (search_id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter an customer id to search");
        } else {
            File file = new File("OrderData.txt");
            File feedback = new File("FeedbackData.txt");

            try {
                FileReader fr = new FileReader(file);
                BufferedReader br = new BufferedReader(fr);
                FileReader ff = new FileReader(feedback);
                BufferedReader bb = new BufferedReader(ff);
                String data;
                String fee;
                Courier order;
                Feedback feed;

                while ((data = br.readLine()) != null) {
                    order = new Courier(data);
                    if (order.getUniqueID().equals(search_id)) {
                        isFound = true;
                        Fcustomerid.setText(order.getUniqueID());
                        Fcustomername.setText(order.getCOname());
                        Ffeedback.setText(order.getCFeedback());
                        while ((fee = bb.readLine()) != null){
                            feed = new Feedback(fee);
                            if (feed.getFcustomerid().equals(search_id)){
                                report.setSelectedItem(feed.getreport());
                                Improvement.setText(feed.getImproveNeeded());
                                return;
                            }
                        }
                        return;
                    }
                }
                JOptionPane.showMessageDialog(this, "Customer not found");
            } catch (FileNotFoundException ex) {

            } catch (IOException ex) {

            }
        }
    }//GEN-LAST:event_FsearchActionPerformed

    private void FsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FsaveActionPerformed
        // TODO add your handling code here:
        String feedbackid = Fcustomerid.getText();
        String feedbackname = Fcustomername.getText();
        String feedback = Ffeedback.getText();
        String fcategory = report.getSelectedItem().toString();
        String improve = Improvement.getText();

        if (!isFound) {
            JOptionPane.showMessageDialog(this, "Enter a valid id and search for a order record first");
        }else if (feedbackid.isEmpty() || feedbackname.isEmpty() || feedback.isEmpty() || fcategory.isEmpty() || improve.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields Necessary");
        } else {
            File file = new File("FeedbackData.txt");
            Feedback user = new Feedback(feedbackid, feedbackname, feedback, fcategory, improve);

            try (PrintWriter pw = new PrintWriter(new FileWriter(file, true))) {
                pw.println(user.toString());
                pw.flush();
                pw.write("");
                pw.close();

                JOptionPane.showMessageDialog(this, "Customer Feedback Added");
                Fsave.setEnabled(false);
                Fcustomerid.setEnabled(false);
                Fcustomername.setEnabled(false);
                Ffeedback.setEnabled(false);
                report.setEnabled(false);
                Improvement.setEnabled(false);

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
            
        }
    }//GEN-LAST:event_FsaveActionPerformed

    private void FupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FupdateActionPerformed
        // TODO add your handling code here:
        String search_id = Fcustomerid.getText();
        String uFcustomername = Fcustomername.getText();
        String uFfeedback = Ffeedback.getText();
        String ureport = report.getSelectedItem().toString();
        String uImprovement = Improvement.getText();

        ArrayList<Feedback> userList = new ArrayList<>();

        if (!isFound) {
            JOptionPane.showMessageDialog(this, "Enter a valid id and search for a order record first");
        } else if (search_id.isEmpty()|| ureport.isEmpty() || uImprovement.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are Necessary!");
        } else {
            File file = new File("FeedbackData.txt");

            try {
                try (FileReader fr = new FileReader(file)) {
                    BufferedReader br = new BufferedReader(fr);
                    String data;
                    Feedback tempUser;

                    while ((data = br.readLine()) != null) {
                        tempUser = new Feedback(data);
                        if (tempUser.getFcustomerid().equals(search_id)) {
                            tempUser.setFcustomername(uFcustomername);
                            tempUser.setFfeedback(uFfeedback);
                            tempUser.setreport(ureport);
                            tempUser.setImproveNeeded(uImprovement);
                        }
                        userList.add(tempUser);
                    }
                }

                try (PrintWriter pw = new PrintWriter(new FileWriter(file, false))) {
                    userList.forEach((user) -> {
                        pw.println(user.toString());
                    });
                    JOptionPane.showMessageDialog(null, "Feedback Data Updated Successfully!");
                    Fupdate.setEnabled(false);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
                
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_FupdateActionPerformed

    private void FdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FdeleteActionPerformed
        // TODO add your handling code here:
        String delete_id = Fcustomerid.getText();

        ArrayList<Feedback> userList = new ArrayList<>();

        if (!isFound) {
            JOptionPane.showMessageDialog(this, "Enter a valid Customer id and search");
        } else {
            File file = new File("FeedbackData.txt");

            try {
                try (FileReader fr = new FileReader(file)) {
                    BufferedReader br = new BufferedReader(fr);
                    String data;
                    Feedback tempUser;

                    while ((data = br.readLine()) != null) {
                        tempUser = new Feedback(data);
                        if (!tempUser.getFcustomerid().equals(delete_id)) {
                            userList.add(tempUser);
                        }
                    }
                }

                try (PrintWriter pw = new PrintWriter(new FileWriter(file, false))) {
                    userList.forEach((user) -> {
                        pw.println(user.toString());
                    });
                    JOptionPane.showMessageDialog(this, "Are You Sure you want to delete?");
                    JOptionPane.showMessageDialog(this, "Deleted Successfully!");
                    Fdelete.setEnabled(false);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
                
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_FdeleteActionPerformed

    private void FresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FresetActionPerformed
        // TODO add your handling code here:
        Fcustomerid.setText("");
        Fcustomername.setText("");
        Ffeedback.setText("");
        report.getSelectedItem().toString();
        Improvement.setText("");

        Fcustomerid.setEnabled(true);
        Fcustomername.setEnabled(true);
        Ffeedback.setEnabled(true);
        report.setEnabled(true);
        Improvement.setEnabled(true);

        Fsave.setEnabled(true);
        Fupdate.setEnabled(true);
        Fdelete.setEnabled(true);
        Fsearch.setEnabled(true);
    }//GEN-LAST:event_FresetActionPerformed

    private void UnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UnameActionPerformed

    private void UsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsaveActionPerformed
        // TODO add your handling code here:
        String usid = Uid.getText();
String uemail = Uemail.getText();
String usname = Uname.getText();
String uspassword = Upassword.getText();
String usrole = Urole.getSelectedItem().toString();

if (uemail.isEmpty() || usid.isEmpty() || usname.isEmpty() || uspassword.isEmpty() || usrole.isEmpty()) {
    JOptionPane.showMessageDialog(this, "All fields Necessary");
} else {

    File search = new File("User.txt");

    try {

        FileReader fr = new FileReader(search);
        BufferedReader br = new BufferedReader(fr);
        String data;
        UserAcc sid;


                UserAcc ua=new UserAcc();
                UserAccountDAO ud=new UserAccount();

                ua.setUemail(Uemail.getText());
                ua.setUid(Uid.getText());
                ua.setUname(Uname.getText());
                ua.setUpassword(Upassword.getText());
                ua.setUrole(Urole.getSelectedItem().toString());

                try {
                    ud.SaveUser(ua);
                } catch (IOException ex) {
                    Logger.getLogger(DeliveryStaffHome.class.getName()).log(Level.SEVERE, null, ex);
                }
                loadData();
                
    } catch (IOException ex) {

        Logger.getLogger(ManagingStaffMenus.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    }//GEN-LAST:event_UsaveActionPerformed

    private void UresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UresetActionPerformed
        // TODO add your handling code here:
        Uid.setText("");
        Uemail.setText("");
        Uname.setText("");
        Upassword.setText("");
        Urole.getSelectedItem().toString();

        Uid.setEnabled(true);
        Uname.setEnabled(true);
        Upassword.setEnabled(true);
        Urole.setEnabled(true);

        Udelete.setEnabled(true);
        Uupdate.setEnabled(true);
        Usave.setEnabled(true);
        Usearch.setEnabled(true);
    }//GEN-LAST:event_UresetActionPerformed

    private void UupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UupdateActionPerformed
        // TODO add your handling code here:
        
        String uid = Uid.getText();
        String search_id = Uemail.getText();
        String uusername = Uname.getText();
        String uuserpassword = Upassword.getText();
        String uuserrole = Urole.getSelectedItem().toString();

        ArrayList<UserAcc> userList = new ArrayList<>();

        if (!isFound) {
            JOptionPane.showMessageDialog(this, "Enter valid Email and search");
        } else if (uid.isEmpty() || search_id.isEmpty() || uusername.isEmpty() || uuserpassword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are Necessary!");
        } else {
            File file = new File("User.txt");

            try {
                try (FileReader fr = new FileReader(file)) {
                    BufferedReader br = new BufferedReader(fr);
                    String data;
                    UserAcc tempUser;

                    while ((data = br.readLine()) != null) {
                        tempUser = new UserAcc(data);
                        if (tempUser.getUemail().equals(search_id)) {
                            tempUser.setUid(uid);
                            tempUser.setUname(uusername);
                            tempUser.setUpassword(uuserpassword);
                            tempUser.setUrole(uuserrole);
                            tempUser.setUemail(search_id);
                        }
                        userList.add(tempUser);
                    }
                }

                try (PrintWriter pw = new PrintWriter(new FileWriter(file, false))) {
                    userList.forEach((user) -> {
                        pw.println(user.toString());
                    });
                    JOptionPane.showMessageDialog(null, "User Data Updated Successfully!");
                    Uupdate.setEnabled(false);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
                loadData();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_UupdateActionPerformed

    private void UdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UdeleteActionPerformed
        // TODO add your handling code here:
         String delete_id = Uid.getText();

        ArrayList<UserAcc> userList = new ArrayList<>();

        if (!isFound) {
            JOptionPane.showMessageDialog(this, "Enter a valid user id and search");
        } else {
            File file = new File("User.txt");

            try {
                try (FileReader fr = new FileReader(file)) {
                    BufferedReader br = new BufferedReader(fr);
                    String data;
                    UserAcc tempUser;

                    while ((data = br.readLine()) != null) {
                        tempUser = new UserAcc(data);
                        if (!tempUser.getUid().equals(delete_id)) {
                            userList.add(tempUser);
                        }
                    }
                }

                try (PrintWriter pw = new PrintWriter(new FileWriter(file, false))) {
                    userList.forEach((user) -> {
                        pw.println(user.toString());
                    });
                    JOptionPane.showMessageDialog(this, "Are You Sure you want to delete?");
                    JOptionPane.showMessageDialog(this, "Deleted Successfully!");
                    Udelete.setEnabled(false);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
                loadData();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_UdeleteActionPerformed

    private void UlogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UlogoutActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        LoginPage l = new LoginPage();
        l.setVisible(true);
    }//GEN-LAST:event_UlogoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagingStaffMenus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagingStaffMenus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagingStaffMenus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagingStaffMenus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagingStaffMenus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AddOrderTable;
    private javax.swing.JTextField Address;
    private javax.swing.JTextField CCharge;
    private javax.swing.JTextField CID;
    private javax.swing.JButton CSearch;
    private javax.swing.JTextField Cname;
    private javax.swing.JTextField Contact;
    private javax.swing.JTextField Date;
    private javax.swing.JButton DeleteOrder;
    private javax.swing.JButton DeleteProduct;
    private javax.swing.JTextField Fcustomerid;
    private javax.swing.JTextField Fcustomername;
    private javax.swing.JButton Fdelete;
    private javax.swing.JTextField Ffeedback;
    private javax.swing.JButton Freset;
    private javax.swing.JButton Fsave;
    private javax.swing.JButton Fsearch;
    private javax.swing.JButton Fupdate;
    private javax.swing.JButton Generate;
    private javax.swing.JTextField Improvement;
    private javax.swing.JTextField ItemName;
    private javax.swing.JButton PSearch;
    private javax.swing.JTextField Price;
    private javax.swing.JTextField ProductID;
    private javax.swing.JTextField ProductName;
    private javax.swing.JTextField Raddress;
    private javax.swing.JTextField Rcharge;
    private javax.swing.JTextField Rcontact;
    private javax.swing.JTextField RcustomerID;
    private javax.swing.JTextField Rdate;
    private javax.swing.JTextField Rdeliveredby;
    private javax.swing.JTextField Rdod;
    private javax.swing.JButton ResetOrder;
    private javax.swing.JButton ResetProduct;
    private javax.swing.JTextField Rid;
    private javax.swing.JTextField Ritemname;
    private javax.swing.JTextField Rname;
    private javax.swing.JTextField Rstatus;
    private javax.swing.JButton SaveOrder;
    private javax.swing.JButton SaveProduct;
    private javax.swing.JComboBox<String> Status;
    private javax.swing.JButton Udelete;
    private javax.swing.JTextField Uemail;
    private javax.swing.JTextField Uid;
    private javax.swing.JButton Ulogout;
    private javax.swing.JTextField Uname;
    private javax.swing.JTextField Upassword;
    private javax.swing.JButton UpdateOrder;
    private javax.swing.JButton UpdateProduct;
    private javax.swing.JButton Ureset;
    private javax.swing.JComboBox<String> Urole;
    private javax.swing.JButton Usave;
    private javax.swing.JButton Usearch;
    private javax.swing.JButton Uupdate;
    private java.awt.Choice choice1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JComboBox<String> report;
    private javax.swing.JTextField rfeedback;
    // End of variables declaration//GEN-END:variables
}
